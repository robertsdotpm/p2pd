How P2PD works
===============

Addresses
----------

In P2PD it all starts with the address. You may already be familiar with IPv4
and IPv6 addresses. Such addresses allow for data to reach nodes on
the packet-switched network we call the Internet. Practically, we can say that
these addresses are assigned to routers. They work quite well for regular
servers but in a peer-to-peer context much more information is needed to
describe a peer's network setup. Here is what a peer's address looks like.

``0,1-[1,0,8.8.8.8,192.168.21.21,58959,3,2,0]-0-zmUGXPOFxUBuToh-easdasd``

As you can see there are already pieces of information you may recognize.
There is an IPv4 address and a private LAN IP that belongs to the NIC
interface associated with that external IP. But what is the other information?
Well, the address format includes the following details.

-   **Signaling offsets.** MQTT server offsets from settings for signaling messages.
-   **Netiface offset.** An index of the interface in absolute terms on that machine.
-   **Interface offset.** Peers include a list of interfaces to listen on. 
    The offset is relative to that list.
-   **External IP.** The WAN IP associated with a given interface route.
-   **Internal IP.** The private address associated with a route. 
-   **Listen port.** The port used to listen on by the peer's main server.
-   **NAT type.** The main type of NAT if the router for a route.
-   **Delta type.** Information on a NAT's port mapping logic.
-   **Delta value.** Information on any patterns found in a NAT's port mappings.
-   **Node ID.** ECDSA public key. Also subscribed for MQTT signaling.
-   **Machine ID.** Generated by the OS to uniquely identify a machine.

The address format can describe multiple interfaces and address families.
The maximum interface number is currently limited to 3 per address family.
The importance of these addresses is they are what's used to open direct
connections to a given peer. See :doc:`../p2p/nicknames` for a guide
to using names to avoid sharing addresses directly.

----

Signaling
-----------

P2PD uses the MQTT protocol for signaling messages. Signaling messages
refer to messages P2PD uses to coordinate connections between peers. Some
examples of such messages include:

-   **P2P_DIRECT** = Tell a peer to connect back to an address.
-   **P2P_PUNCH** = Exchange predicted port mappings as part of the
    sequence of events leading up to TCP hole punching.

Signaling messages are instrumental to the workings of P2PD. By relying on
public, open, MQTT servers -- messages are able to reach peers easily.
The way this occurs is through the use of random IDs as topic subscriptions.
A peer subscribes to a random ID and includes this ID in its address information.
Messages can then reach that peer via an MQTT broker server.
Such an approach is scalable and already backed by many public servers.

You may be more familiar with Bitcoin and how it initially used IRC
to connect to its peer-to-peer network. What Bitcoin was doing was using
IRC as a kind of 'pub-sub' system. Specific channels were marked as topics
to subscribe to. The rooms could then be joined and channel members served
as public entry points to the Bitcoin peer-to-peer network.

.. NOTE::
    P2PD does not use MQTT servers as 'proxies.' Only as a way to exchange
    initial messages needed to setup direct connections between peers. 
    Actual data is still peer-to-peer.

----

Methodology
-------------

Please see :doc:`../p2p/connect` for strategies P2PD uses for direct connections.